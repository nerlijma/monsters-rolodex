{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","id","SearchBox","onChange","type","placeholder","App","state","searchField","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAaeA,EAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,uBAAuBC,IAAG,+BAA0BH,EAAMI,QAAQC,KAAxC,4BACnC,6BAAKL,EAAMI,QAAQC,OACnB,4BAAIL,EAAMI,QAAQE,YCOfC,G,MAXE,SAACP,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,WCIpBC,EAVG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OACI,uBACIC,KAAK,SACLC,YAAY,iBACZF,SAAUA,KCsCPG,E,kDAtCb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJE,E,qDAQnB,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,sBAG7C,SAASE,GACPC,KAAKF,SAAS,CAAEN,YAAaO,EAAEE,OAAOC,U,oBAGxC,WAAU,IAAD,SAC2BF,KAAKT,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZW,EAAmBpB,EAASqB,QAAO,SAAAzB,GAAO,OAAIA,EAAQC,KAAKyB,cAAcC,SAASd,EAAYa,kBAEpG,OACE,sBAAK7B,UAAU,MAAf,UACE,kDAOA,cAAC,EAAD,CAAWW,SAAU,SAAAY,GAAC,OAAI,EAAKD,SAAS,CAAEN,YAAaO,EAAEE,OAAOC,QAAS,kBAAMK,QAAQC,IAAI,EAAKjB,aAChG,cAAC,EAAD,CAAUR,SAAUoB,W,GAjCVM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c34e5e71.chunk.js","sourcesContent":["import React from \"react\"\r\nimport './card.styles.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"{props.monster.name}\" src={`https://robohash.org/${props.monster.name}?set=set2&size=180x180`} />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/card.component'\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster =>\r\n                <Card key={monster.id} monster={monster} />\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\n\r\nconst SearchBox = ({ onChange }) => {\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            placeholder=\"enter any text\"\r\n            onChange={onChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  onChange(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\" >\n        <h1>Monsters Rolodex</h1>\n        {/* <input\n          type=\"search\"\n          placeholder=\"enter any text\"\n          onChange={e => this.setState({ searchField: e.target.value }, () => console.log(this.state))}\n        /> */}\n        {/* <SearchBox onChange={(e) => this.onChange(e)} /> */}\n        <SearchBox onChange={e => this.setState({ searchField: e.target.value }, () => console.log(this.state))} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}